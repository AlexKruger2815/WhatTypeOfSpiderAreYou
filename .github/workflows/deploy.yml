name: Deploy to Amazon EC2

on:
  workflow_call:
    inputs:
      SOURCE_DIR: 
        required: true
        type: string
      TARGET_DIR:
        required: true
        type: string
      DOCKER_SERVICE_NAME:
        required: true
        type: string
env:
  ENV_S3_URI: ${{ secrets.FRONTEND_ENV }}
  AWS_REGION: "${{ secrets.AWS_REGION }}"
  AWS_ROLE: ${{ secrets.AWS_ROLE }}
  EC2_SSH_KEY_NAME: ${{ secrets.EC2_SSH_KEY_NAME }}
  EC2_SSH_KEY_VALUE: ${{ secrets.EC2_SSH_KEY_VALUE }}

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials from AWS account
      uses: aws-actions/configure-aws-credentials@v4
      id: creds
      with:
        role-to-assume: ${{ env.AWS_ROLE }}
        aws-region: ${{ env.AWS_REGION }}
        output-credentials: true
        role-session-name: Github-OIDC-TERRAFORM
        audience: sts.amazonaws.com

    - name: setup awscli
      uses: unfor19/install-aws-cli-action@v1
      with:
        version: 2
    
    - name: retrieve env file
      run: |
          aws s3 cp ${{env.ENV_S3_URI}} ${{ inputs.SOURCE_DIR }}

    - name: Set IP env variable
      run: |
        EC2_IP=$(aws ec2 describe-instances --query "Reservations[*].Instances[?KeyName=='${{ env.EC2_SSH_KEY_NAME }}'].PublicIpAddress" --output text)
        echo "EC2_IP=$EC2_IP" >> $GITHUB_ENV

    - name: Stop server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.EC2_IP }}
        username: ubuntu
        key:  ${{ env.EC2_SSH_KEY_VALUE }}
        script: |-
          $DIR=${{ inputs.TARGET_DIR }}/${{ inputs.SOURCE_DIR }}
          if [[ -d $DIR ]]; then
            cd $DIR
            docker compose down ${{ inputs.DOCKER_SERVICE_NAME }}
          fi 

    - name: Replace code on EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ env.EC2_IP }}
        username: ubuntu
        key:  ${{ env.EC2_SSH_KEY_VALUE }}
        source: "${{ inputs.SOURCE_DIR }}/"
        rm: true
        target: ${{ inputs.TARGET_DIR }}/
      
    - name: Start server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.EC2_IP }}
        username: ubuntu
        key:  ${{ env.EC2_SSH_KEY_VALUE }}
        script: |-
            cd ${{ inputs.TARGET_DIR }}/${{ inputs.SOURCE_DIR }}
            docker compose up -d --build  ${{ inputs.DOCKER_SERVICE_NAME }}
